{"ast":null,"code":"import { UserService } from '../../services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nfunction UserListComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function UserListComponent_li_9_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r1.id));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r1.name, \" (\", user_r1.email, \") \");\n  }\n}\nlet UserListComponent = /*#__PURE__*/(() => {\n  class UserListComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.users = [];\n      this.newUser = {\n        name: '',\n        email: ''\n      };\n    }\n    ngOnInit() {\n      this.fetchUsers();\n    }\n    fetchUsers() {\n      this.userService.getUsers().subscribe(data => this.users = data);\n    }\n    addUser() {\n      if (!this.newUser.name || !this.newUser.email) return;\n      this.userService.addUser(this.newUser).subscribe(() => {\n        this.fetchUsers();\n        this.newUser = {\n          name: '',\n          email: ''\n        };\n      });\n    }\n    deleteUser(id) {\n      this.userService.deleteUser(id).subscribe(() => this.fetchUsers());\n    }\n    static {\n      this.ɵfac = function UserListComponent_Factory(t) {\n        return new (t || UserListComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserListComponent,\n        selectors: [[\"app-user-list\"]],\n        decls: 10,\n        vars: 3,\n        consts: [[1, \"container\"], [3, \"submit\"], [\"name\", \"name\", \"placeholder\", \"Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n        template: function UserListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"User List\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"submit\", function UserListComponent_Template_form_submit_3_listener() {\n              return ctx.addUser();\n            });\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵlistener(\"ngModelChange\", function UserListComponent_Template_input_ngModelChange_4_listener($event) {\n              return ctx.newUser.name = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function UserListComponent_Template_input_ngModelChange_5_listener($event) {\n              return ctx.newUser.email = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"button\", 4);\n            i0.ɵɵtext(7, \"Add\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"ul\");\n            i0.ɵɵtemplate(9, UserListComponent_li_9_Template, 4, 2, \"li\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.newUser.name);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.newUser.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.users);\n          }\n        }\n      });\n    }\n  }\n  return UserListComponent;\n})();\nexport { UserListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}